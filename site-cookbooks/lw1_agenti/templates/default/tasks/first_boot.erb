require 'unix_crypt'
require 'json'

ruby_block "set instance_id to password by default" do
  block do
    salt = rand(36**16).to_s(36)
    shadow = UnixCrypt::SHA512.build(node[:ec2][:instance_id], salt, 40000)
    config = JSON.load(File.read('/etc/ajenti/config.json'))
    config['users']['root']['password'] = ["sha512", shadow].join("|")
    config['bind']['port'] = 8443
    config.delete('installation_id')
    File.open('/etc/ajenti/config.json', "w") { |f| f.puts(JSON.pretty_generate(config)) }
  end
end

bash "generate tls cert" do
  code <<-"EOL"
    /usr/bin/ajenti-ssl-gen #{node[:ec2][:public_ipv4] ? node[:ec2][:public_ipv4] : node[:ec2][:hostname]} -f
  EOL
end

bash 'mysql_secure_install emulate' do
  code <<-"EOH"
    /usr/bin/mysqladmin drop test -f
    /usr/bin/mysql -e "DELETE FROM user WHERE user = '';" -D mysql
    /usr/bin/mysql -e "DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');" -D mysql
    /usr/bin/mysql -e "SET PASSWORD FOR 'root'@'::1' = PASSWORD('#{node.ec2.instance_id}');" -D mysql
    /usr/bin/mysql -e "SET PASSWORD FOR 'root'@'127.0.0.1' = PASSWORD('#{node.ec2.instance_id}');" -D mysql
    /usr/bin/mysql -e "SET PASSWORD FOR 'root'@'localhost' = PASSWORD('#{node.ec2.instance_id}');" -D mysql
    /usr/bin/mysqladmin flush-privileges -pnewpassword -p#{node.ec2.instance_id}
    /usr/bin/mysql -uroot -p#{node.ec2.instance_id} -D mysql < /srv/default/phpmyadmin/sql/create_tables.sql
  EOH
  action :run
  only_if "/usr/bin/mysql -u root -e 'show databases;'"
end

bash 'phpmyadmin setup' do
  code <<-'EOH'
    cp -p /srv/default/phpmyadmin/config.sample.inc.php /srv/default/phpmyadmin/config.inc.php
    sed -e "s@\$cfg\['blowfish_secret'\]\ =\ '';@\$cfg\['blowfish_secret'\]\ =\ '`openssl rand -hex 46`';@" /srv/default/phpmyadmin/config.inc.php -i
    sed -e "s@^//\ \(\$cfg\['Servers'\]\[\$i\]\['pmadb'\]\)@\1@" /srv/default/phpmyadmin/config.inc.php -i
    sed -e "s@^//\ \(\$cfg\['Servers'\]\[\$i\]\['bookmarktable'\]\)@\1@" /srv/default/phpmyadmin/config.inc.php -i
    sed -e "s@^//\ \(\$cfg\['Servers'\]\[\$i\]\['relation'\]\)@\1@" /srv/default/phpmyadmin/config.inc.php -i
    sed -e "s@^//\ \(\$cfg\['Servers'\]\[\$i\]\['table_info'\]\)@\1@" /srv/default/phpmyadmin/config.inc.php -i
    sed -e "s@^//\ \(\$cfg\['Servers'\]\[\$i\]\['table_coords'\]\)@\1@" /srv/default/phpmyadmin/config.inc.php -i
    sed -e "s@^//\ \(\$cfg\['Servers'\]\[\$i\]\['pdf_pages'\]\)@\1@" /srv/default/phpmyadmin/config.inc.php -i
    sed -e "s@^//\ \(\$cfg\['Servers'\]\[\$i\]\['column_info'\]\)@\1@" /srv/default/phpmyadmin/config.inc.php -i
    sed -e "s@^//\ \(\$cfg\['Servers'\]\[\$i\]\['history'\]\)@\1@" /srv/default/phpmyadmin/config.inc.php -i
    sed -e "s@^//\ \(\$cfg\['Servers'\]\[\$i\]\['table_uiprefs'\]\)@\1@" /srv/default/phpmyadmin/config.inc.php -i
    sed -e "s@^//\ \(\$cfg\['Servers'\]\[\$i\]\['tracking'\]\)@\1@" /srv/default/phpmyadmin/config.inc.php -i
    sed -e "s@^//\ \(\$cfg\['Servers'\]\[\$i\]\['userconfig'\]\)@\1@" /srv/default/phpmyadmin/config.inc.php -i
    sed -e "s@^//\ \(\$cfg\['Servers'\]\[\$i\]\['recent'\]\)@\1@" /srv/default/phpmyadmin/config.inc.php -i
    sed -e "s@^//\ \(\$cfg\['Servers'\]\[\$i\]\['favorite'\]\)@\1@" /srv/default/phpmyadmin/config.inc.php -i
    sed -e "s@^//\ \(\$cfg\['Servers'\]\[\$i\]\['users'\]\)@\1@" /srv/default/phpmyadmin/config.inc.php -i
    sed -e "s@^//\ \(\$cfg\['Servers'\]\[\$i\]\['usergroups'\]\)@\1@" /srv/default/phpmyadmin/config.inc.php -i
    sed -e "s@^//\ \(\$cfg\['Servers'\]\[\$i\]\['navigationhiding'\]\)@\1@" /srv/default/phpmyadmin/config.inc.php -i
    sed -e "s@^//\ \(\$cfg\['Servers'\]\[\$i\]\['savedsearches'\]\)@\1@" /srv/default/phpmyadmin/config.inc.php -i
    sed -e "s@^//\ \(\$cfg\['Servers'\]\[\$i\]\['central_columns'\]\)@\1@" /srv/default/phpmyadmin/config.inc.php -i
  EOH
  action :run
  not_if "test -f /srv/default/phpmyadmin/config.inc.php"
end

bash 'create_cert_for_ssl' do
  code <<-EOH
  openssl genrsa > /etc/ajenti/certs/default_key.pem
  openssl req -subj "/C=JP/ST=Kobe-shi/L=Chuo-ku/O=OpsRock LLC/OU=amiage.com/CN=#{node[:ec2][:public_ipv4] ? node[:ec2][:public_ipv4] : node[:ipaddress]}" \
    -new -x509 -nodes -sha1 -days 3650 -key /etc/ajenti/certs/default_key.pem > /etc/ajenti/certs/default_cert.pem
  EOH
  creates '/etc/ajenti/certs/default_cert.pem'
end

file '/etc/ajenti/certs/default_key.pem' do
  mode '0600'
end

file '/etc/ajenti/certs/default_cert.pem' do
  mode '0644'
end

template "/opt/lw1/tasks/site_phpmyadmin.json" do
  local true
  source "/opt/lw1/tasks/site_phpmyadmin.json.erb"
end

template "/etc/php5/fpm/php-fpm.conf" do
  local true
  source "/opt/lw1/tasks/php-fpm.conf.erb"
end

file '/etc/ajenti/vh.json' do
  owner "root"
  group "root"
  mode  "0666"
  action :create
  content JSON.pretty_generate({websites: []})
end

service "ajenti" do
  action :enable
end

cron "setup_ajenti_on_init" do
  action :delete
end

### expelimental combination X ...
#execute 'reboot' do
#  action :nothing
#  command "reboot &"
#end

bash "import phpadmin to website" do
  timeout 300
  environment 'PATH' => "/sbin:/usr/sbin:/bin:/usr/bin"
  code <<-EOH
    service ajenti start
    until test -S /var/run/ajenti-ipc.sock ; do sleep 3 ; done
    until curl -s -k https://127.0.0.1:8443 ; do sleep 3 ; done
    /usr/bin/ajenti-ipc v import /opt/lw1/tasks/site_phpmyadmin.json
    /usr/bin/ajenti-ipc v apply
    service ajenti restart
  EOH
### expelimental combination X ...
    # notifies :run, "execute[reboot]"
end

## expelimental: check php-fpm loaded by ajenti
## python -m compileall /var/lib/ajenti/plugins/
# bash "wait nginx testmodule" do
#   environment 'PATH' => "/sbin:/usr/sbin:/bin:/usr/bin"
#   code <<-EOH
#   until test -f /var/lib/ajenti/plugins/vh-php-fpm/phpfpm.pyc ; do
#     service ajenti restart
#   done
#   EOH
# end

%w{/var/chef/cache /var/chef/backup}.map do |dir|
  directory dir do
    action :delete
    recursive true
  end
end
